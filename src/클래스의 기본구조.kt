// kotlin 강좌 #8 클래스의 기본구조

// 클래스는 '값'과 그 값을 사용하는 '기능'들을 묶어놓은 것이다.
// 우리가 배운 기본자료형들(Byte, Short,Int,Long, Float...등등)도 코틀린 내부에서는 모두 클래스로 만들어져있다.
// 클래스는 고유의 특징값을 담는 변수는 '속성'과   기능을 구현한 '함수'로 이루어져있다. -> 클래스 = 속성+함수
// 사람의 이름과 출생년도를 관리하는 클래스를 하나 만들어보자.
// 먼저 class라는 키워드를 적고 클래스 이름(person)을 적는다.
// 그 다음 괄호안에 클래스가 가지는 속성으로 이름과 출생년도를 쉼표로 구분하여 나열한다. --> 변수를 선언하는 것과 형태가 같다
// 함수없이 속성만 가진 클래스는 이것만으로도 구현이 완료될 수 있다.
/*
fun main() {

}

class Person (var name: String, val birthYear: Int )
 */

// ** 클래스는 '인스턴스(instance)'를 만드는 틀이라는 점을 이해해야한다.
// ** 인스턴스(Instance)란 클래스를 이용하여 만들어내는 서로다른 속성의 개체를 지칭하는 용어.
// 예를들어 우리가 입력할 데이터로 Peson A instance 박보영, 1990 Person B instance 전정국, 1997 Person C instance 장원영, 2004 만들어 사용가능
// a라는 변수에 박보영의 인스턴스를 만들어보자.
// 변수를 선언한 후 할당 연산자를 쓰고 클래스의 이름을 적은 후 클래스 선언시 적은 속성대로 괄호안에 "박보영"과 1990이라는 값을 써준다.
// 나머지 두명의 인스턴스도 마찬가지로 만들어보자.
// 그럼 이 인스턴스를 담은 변수는 어떻게 사용 될까?
// 변수명 뒤에 참조 연산자에 . 을 찍고 참조하려는 속성의 이름을 써주면 된다. -->>> 연산자.속성명
// 박보영에게 자기소개를 시켜보자.
// println안에 ("안녕하세요.${a.birthYear}년생${a.name}입니다") 라고 써보자.
// 인스턴스의 속성을 출력할 때 달러와 중괄호를 사용하는 이유는 println이 "문자로 오인"할 수 있기때문에 전체를 감싼것이다.

/*
fun main() {
    var a = Person("박보영", 1990)
    var b = Person("전정국", 1997)
    var c = Person("장원영", 2004)

    println ("안녕하세요. ${a.birthYear}년생 ${a.name}입니다 ")

}

class Person (var name: String, val birthYear: Int )

*/

// 그런데 모든 Person의 인스턴스가 이러한 형식으로 자기 소개를 자주해야한다면 매번 println을 쓰는것은 비효율 적이겠지?
// 그래서 자주 사용하는 공통적인 기능은 클래스내에 함수로 넣어준다.
// 클래스에 함수를 추갸하는 방법은 먼저 아까 선언했던 클래스에 중괄호를 추가 하고 자기소개를 하는 함수를 하나 추가하면 된다.

fun main() {
    var a = Person("박보영", 1990)
    var b = Person("전정국", 1997)
    var c = Person("장원영", 2004)

    a.introduce()
    b.introduce()
    c.introduce()

}

class Person (var name: String, val birthYear: Int ) {
    fun introduce () {
        println("안녕하세요. ${birthYear}년생 ${name}입니다") //* 클래스 내부에서는 속성 이름만 사용한다.
    }
}
// 이제 인스턴스를 통해 이 함수를 참조하여 호출해주면 언제나 자기소개를 편하게 할 수 있다.

// kotlin은 객체지향형 언어를 기반으로 함수형 언어의 장점을 흡수한 실용적인 언어다.
// 따라서 객체지향의 기본구조가 되는 클래스를 이해하는 것이 무엇보다 중요하다.